# ======================================================
# CONFIGURAÇÃO DA APLICAÇÃO DURVALCRM
# ======================================================
# As propriedades abaixo são específicas para o perfil de DESENVOLVIMENTO (%dev),
# ativado automaticamente ao executar 'quarkus dev'.
# ======================================================

# %dev - Configuração do Datasource para o banco de dados local via Docker
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=durvalcrm_user
%dev.quarkus.datasource.password=your_strong_password # IMPORTANTE: Use a mesma senha definida no docker-compose.yml
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/durvalcrm_dev

# ======================================================
# %dev - CONFIGURAÇÃO DO HIBERNATE ORM COM PANACHE
# ======================================================

# 'validate': Garante que as entidades Java (@Entity) estão em conformidade com o schema do banco.
%dev.quarkus.hibernate-orm.database.generation=validate

# Habilita o log de todas as queries SQL geradas pelo Hibernate.
%dev.quarkus.hibernate-orm.log.sql=true

# ======================================================
# %dev - CONFIGURAÇÃO DE SEGURANÇA (A SER USADA NA SPRINT 1)
# ======================================================

# ======================================================
# CONFIGURAÇÃO DE SEGURANÇA E PERMISSÕES
# ======================================================

# Endpoints públicos (não requerem autenticação)
quarkus.http.auth.permission.public.paths=/health/*,/auth/login-info
quarkus.http.auth.permission.public.policy=permit

# Todos os outros endpoints requerem autenticação
quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated

# Desabilita autenticação proativa (permite endpoints públicos)
quarkus.http.auth.proactive=false

# ======================================================
# CONFIGURAÇÃO OIDC/KEYCLOAK
# ======================================================

# ID do cliente que configuramos no Keycloak
quarkus.oidc.client-id=durvalcrm-app

# URL do servidor Keycloak e do realm que criamos
%dev.quarkus.oidc.auth-server-url=http://localhost:8080/realms/durval-crm

# Necessário para validar o tipo de token
%dev.quarkus.oidc.token.issuer=http://localhost:8080/realms/durval-crm

# ======================================================
# CONFIGURAÇÃO PARA TESTES
# ======================================================

# Desabilita a autenticação quando o perfil 'test' está ativo
%test.quarkus.http.auth.permission.default.paths=/*
%test.quarkus.http.auth.permission.default.policy=permit