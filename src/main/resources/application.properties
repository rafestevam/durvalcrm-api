# =================================================================
#      CONFIGURAÇÃO UNIFICADA E CORRIGIDA PARA DURVALCRM API
# =================================================================

# -----------------------------------------------------------------
# >> PERFIL DE DESENVOLVIMENTO (%dev)
# -----------------------------------------------------------------

# Configuração do Datasource (PostgreSQL)
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=durvalcrm_user
%dev.quarkus.datasource.password=durvaldev@123
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/durvalcrm_dev

# Configuração do Hibernate ORM
%dev.quarkus.hibernate-orm.database.generation=validate
%dev.quarkus.hibernate-orm.log.sql=true

# Configuração de Segurança OIDC (AJUSTADA PARA API DE SERVIÇO)
# Define a aplicação como um 'service' (API REST), que valida tokens Bearer.
# Esta é a correção principal para o erro de inicialização.
quarkus.oidc.application-type=service
%dev.quarkus.oidc.auth-server-url=http://localhost:8080/realms/durval-crm

# ID do cliente que configuramos no Keycloak
quarkus.oidc.client-id=durvalcrm-app

# Desabilita a autenticação proativa para evitar overhead desnecessário
quarkus.http.auth.proactive=false

# Política de Autenticação: protege todos os endpoints por padrão
quarkus.http.auth.permission.default.policy=authenticated

# Caminhos que devem ser públicos (não exigem autenticação)
quarkus.http.auth.permission.permit.paths=/auth/*,/health/*,/q/*
quarkus.http.auth.permission.permit.policy=permit

# Configuração CORS (Cross-Origin Resource Sharing)
%dev.quarkus.http.cors=true
%dev.quarkus.http.cors.origins=http://localhost:3000,http://localhost:5173,http://localhost:8080
%dev.quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
%dev.quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS

# Configurações de Desenvolvimento
%dev.quarkus.http.port=8082
%dev.quarkus.live-reload.enabled=true
%dev.quarkus.log.level=INFO
%dev.quarkus.log.category."br.org.cecairbar.durvalcrm".level=DEBUG

# -----------------------------------------------------------------
# >> PERFIL DE PRODUÇÃO (%prod)
# -----------------------------------------------------------------

# Use variáveis de ambiente para configurar a conexão em produção
%prod.quarkus.oidc.auth-server-url=${KEYCLOAK_URL:http://localhost:8080}/realms/durvalcrm
%prod.quarkus.oidc.client-id=${KEYCLOAK_CLIENT_ID:durvalcrm-app}
# %prod.quarkus.datasource.jdbc.url=...
# %prod.quarkus.datasource.username=...
# %prod.quarkus.datasource.password=...

# -----------------------------------------------------------------
# >> PERFIL DE TESTE (%test)
# -----------------------------------------------------------------

# Configuração do Datasource para testes (H2 em memória)
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# Configuração do Hibernate ORM para testes
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.log.sql=false

# Segurança para Testes: OIDC desabilitado, todos os endpoints são permitidos
%test.quarkus.oidc.enabled=false
%test.quarkus.http.auth.permission.default.policy=permit

# Configurações gerais para testes
%test.quarkus.http.port=8081
%test.quarkus.log.level=WARN