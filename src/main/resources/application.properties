# ======================================================
# CONFIGURAÇÃO DA APLICAÇÃO DURVALCRM
# ======================================================
# As propriedades abaixo são específicas para o perfil de DESENVOLVIMENTO (%dev),
# ativado automaticamente ao executar 'quarkus dev'.
# ======================================================

# %dev - Configuração do Datasource para o banco de dados local via Docker
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=durvalcrm_user
%dev.quarkus.datasource.password=your_strong_password # IMPORTANTE: Use a mesma senha definida no docker-compose.yml
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/durvalcrm_dev

# ======================================================
# %dev - CONFIGURAÇÃO DO HIBERNATE ORM COM PANACHE
# ======================================================

# 'validate': Garante que as entidades Java (@Entity) estão em conformidade com o schema do banco.
%dev.quarkus.hibernate-orm.database.generation=validate

# Habilita o log de todas as queries SQL geradas pelo Hibernate.
%dev.quarkus.hibernate-orm.log.sql=true

# ======================================================
# %dev - CONFIGURAÇÃO DE SEGURANÇA (A SER USADA NA SPRINT 1)
# ======================================================
# Ativa a autenticação OIDC
quarkus.http.auth.permission.default.paths=/*
quarkus.http.auth.permission.default.policy=authenticated
quarkus.http.auth.proactive=false

# Permitir acesso público ao endpoint de informações de login
quarkus.http.auth.permission.auth.paths=/auth/*
quarkus.http.auth.permission.auth.policy=permit

# ID do cliente que configuramos no Keycloak
quarkus.oidc.client-id=durvalcrm-app

# URL do servidor Keycloak e do realm que criamos
%dev.quarkus.oidc.auth-server-url=http://localhost:8080/realms/durval-crm

# Necessário para validar o tipo de token
%dev.quarkus.oidc.token.issuer=http://localhost:8080/realms/durval-crm

# ======================================================
# %test - CONFIGURAÇÃO DE TESTE PARA DURVALCRM
# ======================================================

# %test - Configuração do Datasource para testes (H2 em memória)
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.username=test
%test.quarkus.datasource.password=test
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# %test - CONFIGURAÇÃO DO HIBERNATE ORM PARA TESTES
# 'drop-and-create': Recria o schema a cada execução de teste
%test.quarkus.hibernate-orm.database.generation=drop-and-create
# Desabilita o log de SQL em testes para reduzir ruído
%test.quarkus.hibernate-orm.log.sql=false

# %test - CONFIGURAÇÃO DE SEGURANÇA PARA TESTES
# Desabilita a autenticação OIDC em testes
%test.quarkus.oidc.enabled=false

# Configurações OIDC para os testes (mesmo desabilitado, os valores são usados pelo AuthResource)
%test.quarkus.oidc.auth-server-url=http://localhost:8080/realms/durval-crm
%test.quarkus.oidc.client-id=durvalcrm-app
%test.quarkus.oidc.token.issuer=http://localhost:8080/realms/durval-crm

# Permite acesso a todos os endpoints durante os testes
%test.quarkus.http.auth.permission.default.paths=/*
%test.quarkus.http.auth.permission.default.policy=permit

# Configuração específica para endpoints de auth serem públicos
%test.quarkus.http.auth.permission.auth.paths=/auth/*
%test.quarkus.http.auth.permission.auth.policy=permit

# Desabilita autenticação proativa em testes
%test.quarkus.http.auth.proactive=false

# %test - CONFIGURAÇÕES GERAIS PARA TESTES
# Porta diferente para evitar conflitos
%test.quarkus.http.port=8081
# Log level mais alto para reduzir ruído nos testes
%test.quarkus.log.level=WARN
%test.quarkus.log.category."br.org.cecairbar.durvalcrm".level=INFO

# ======================================================
# CONFIGURAÇÕES ADICIONAIS PARA O AUTHRESOURCE MESCLADO
# ======================================================

# Configurações específicas para produção
%prod.quarkus.oidc.auth-server-url=${KEYCLOAK_URL:http://localhost:8080}/realms/durval-crm
%prod.quarkus.oidc.client-id=${KEYCLOAK_CLIENT_ID:durvalcrm-app}

# Configurações de autenticação mais específicas
%dev.quarkus.oidc.authentication.redirect-path=/auth/callback
%dev.quarkus.oidc.authentication.restore-path-after-redirect=true

# Configurações de token
%dev.quarkus.oidc.token.verify-access-token-with-user-info=false
%dev.quarkus.oidc.token.refresh-expired=true
%dev.quarkus.oidc.token.auto-refresh-interval=30s

# Configurações de logout
%dev.quarkus.oidc.logout.path=/auth/logout
%dev.quarkus.oidc.logout.post-logout-path=/

# Configurações de segurança mais granulares
quarkus.http.auth.permission.public.paths=/auth/login-info,/auth/logout,/q/*
quarkus.http.auth.permission.public.policy=permit

quarkus.http.auth.permission.authenticated.paths=/auth/me,/auth/validate,/auth/refresh,/associados/*
quarkus.http.auth.permission.authenticated.policy=authenticated

# Configurações específicas para testes - desabilita OIDC completamente
%test.quarkus.oidc.enabled=false
%test.quarkus.http.auth.permission.default.paths=/*
%test.quarkus.http.auth.permission.default.policy=permit

# Configurações de CORS mais específicas para autenticação
%dev.quarkus.http.cors.exposed-headers=authorization,content-type,x-requested-with
%dev.quarkus.http.cors.access-control-allow-credentials=true

# Logging mais detalhado para debugging de autenticação (apenas em dev)
%dev.quarkus.log.category."io.quarkus.oidc".level=DEBUG
%dev.quarkus.log.category."io.quarkus.security".level=DEBUG

# ======================================================
# CONFIGURAÇÃO CORS (para desenvolvimento)
# ======================================================
%dev.quarkus.http.cors=true
%dev.quarkus.http.cors.origins=http://localhost:3000,http://localhost:5173,http://localhost:8080
%dev.quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
%dev.quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS

# ======================================================
# CONFIGURAÇÃO DE VALIDAÇÃO
# ======================================================
quarkus.hibernate-validator.method-validation.allow-parameter-constraints=true
quarkus.hibernate-validator.method-validation.allow-overriding-parameter-constraints=true

# ======================================================
# CONFIGURAÇÃO DE LOGGING
# ======================================================
%dev.quarkus.log.level=INFO
%dev.quarkus.log.category."br.org.cecairbar.durvalcrm".level=DEBUG

# ======================================================
# CONFIGURAÇÃO DE DESENVOLVIMENTO
# ======================================================
%dev.quarkus.live-reload.enabled=true
%dev.quarkus.dev-ui.cors.enabled=true
